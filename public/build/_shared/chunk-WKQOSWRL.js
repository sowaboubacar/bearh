import{d as m}from"/build/_shared/chunk-SUJVG5FV.js";import{a as R}from"/build/_shared/chunk-BBTKOQ57.js";import{e as d}from"/build/_shared/chunk-UED2Q7CE.js";var t=d(R(),1);var a=d(R(),1);var h=t[" useInsertionEffect ".trim().toString()]||m;function w({prop:e,defaultProp:s,onChange:o=()=>{},caller:f}){let[l,c,i]=S({defaultProp:s,onChange:o}),n=e!==void 0,v=n?e:l;{let r=t.useRef(e!==void 0);t.useEffect(()=>{let u=r.current;u!==n&&console.warn(`${f} is changing from ${u?"controlled":"uncontrolled"} to ${n?"controlled":"uncontrolled"}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`),r.current=n},[n,f])}let C=t.useCallback(r=>{if(n){let u=p(r)?r(e):r;u!==e&&i.current?.(u)}else c(r)},[n,e,c,i]);return[v,C]}function S({defaultProp:e,onChange:s}){let[o,f]=t.useState(e),l=t.useRef(o),c=t.useRef(s);return h(()=>{c.current=s},[s]),t.useEffect(()=>{l.current!==o&&(c.current?.(o),l.current=o)},[o,l]),[o,f,c]}function p(e){return typeof e=="function"}var $=Symbol("RADIX:SYNC_STATE");export{w as a};
