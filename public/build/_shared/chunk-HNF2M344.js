import{b as x}from"/build/_shared/chunk-SUJVG5FV.js";import{a as d}from"/build/_shared/chunk-OMO5CWS2.js";import{a as R}from"/build/_shared/chunk-NVGVVEPD.js";import{a as g,b as m}from"/build/_shared/chunk-BBTKOQ57.js";import{e as n}from"/build/_shared/chunk-UED2Q7CE.js";var E=n(g());var p=n(g(),1);var l=n(m(),1),v="Progress",f=100,[A,U]=x(v),[C,S]=A(v),h=p.forwardRef((r,e)=>{let{__scopeProgress:i,value:a=null,max:o,getValueLabel:_=D,...M}=r;(o||o===0)&&!N(o)&&console.error(L(`${o}`,"Progress"));let t=N(o)?o:f;a!==null&&!b(a,t)&&console.error(O(`${a}`,"Progress"));let s=b(a,t)?a:null,V=u(s)?_(s,t):void 0;return(0,l.jsx)(C,{scope:i,value:s,max:t,children:(0,l.jsx)(d.div,{"aria-valuemax":t,"aria-valuemin":0,"aria-valuenow":u(s)?s:void 0,"aria-valuetext":V,role:"progressbar","data-state":$(s,t),"data-value":s??void 0,"data-max":t,...M,ref:e})})});h.displayName=v;var y="ProgressIndicator",I=p.forwardRef((r,e)=>{let{__scopeProgress:i,...a}=r,o=S(y,i);return(0,l.jsx)(d.div,{"data-state":$(o.value,o.max),"data-value":o.value??void 0,"data-max":o.max,...a,ref:e})});I.displayName=y;function D(r,e){return`${Math.round(r/e*100)}%`}function $(r,e){return r==null?"indeterminate":r===e?"complete":"loading"}function u(r){return typeof r=="number"}function N(r){return u(r)&&!isNaN(r)&&r>0}function b(r,e){return u(r)&&!isNaN(r)&&r<=e&&r>=0}function L(r,e){return`Invalid prop \`max\` of value \`${r}\` supplied to \`${e}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${f}\`.`}function O(r,e){return`Invalid prop \`value\` of value \`${r}\` supplied to \`${e}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${f} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var c=h,w=I;var P=n(m()),G=E.forwardRef(({className:r,value:e,...i},a)=>(0,P.jsx)(c,{ref:a,className:R("relative h-2 w-full overflow-hidden rounded-full bg-primary/20",r),...i,children:(0,P.jsx)(w,{className:"h-full w-full flex-1 bg-primary transition-all",style:{transform:`translateX(-${100-(e||0)}%)`}})}));G.displayName=c.displayName;export{G as a};
